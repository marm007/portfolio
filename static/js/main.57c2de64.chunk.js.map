{"version":3,"sources":["components/Slider/types.tsx","contexts/menu-context.tsx","hooks/use-on-click-outside.tsx","components/Menu/styled.tsx","components/Menu/index.tsx","data/icons.tsx","components/Slider/reducer.tsx","components/Slider/slide.tsx","hooks/use-intersection-observer.tsx","components/Slider/video.tsx","components/Slider/styled.tsx","components/Slider/index.tsx","components/TechStack.tsx","helpers/index.tsx","components/Project/styled.tsx","components/Project/index.tsx","App.tsx","reportWebVitals.ts","providers/menu-provider.tsx","index.tsx"],"names":["SlideDirection","defaultState","menu","show","buttons","position","top","left","MenuContext","React","createContext","useOnClickOutside","ref","handler","useEffect","listener","event","element","current","contains","target","document","addEventListener","removeEventListener","fadeIn","keyframes","fadeInAnimation","css","MenuContainer","styled","div","Menu","useRef","useContext","hideMenu","style","map","name","url","href","techStackIcons","sliderReducer","state","action","type","offsetImage","data","slideDirection","slidePosition","playAnimation","isPrepared","currentImage","slideNextPosition","Slide","children","props","useIntersectionObserver","onIntersect","threshold","rootMargin","observer","IntersectionObserver","observe","unobserve","Video","animate","videoRef","pause","visibility","load","observableElement","isIntersecting","autoPlay","play","animationDuration","animationTiming","slideInRight","slideInLeft","slideInRightAnimation","slideInLeftAnimation","slideOutLeft","slideOutRight","slideOutRightAnimation","slideOutLeftAnimation","noSlideAnimation","SliderContainer","SlideMain","direction","Left","SlideOffset","SlideVideo","SlideImage","img","SliderBulletContainer","SliderBullet","button","isPicked","ArrowImage","LeftArrowImage","RightArrowImage","SliderLeftButton","SliderRightButton","Slider","photos","video","slidesCount","length","sliderInitialState","sliderRef","useReducer","dispatch","handleAnimationEnd","handleSlideChangeButtonClick","index","src","loop","muted","onLoad","onClick","Right","Array","_","change","handleSlideChange","Container","Image","TechStack","icon","breakpoints","ProjectContainer","ProjectBody","ProejctHeader","ProjectTitleContainer","ProjectTitle","ProjectLogoContainer","ProjectLogoLink","a","ProjectLogoButton","ProjectLogo","ProjectDescriptionContainer","ProjectTechStacksContainer","linkColor","ProjectWebsiteLink","Project","title","subtitle","desc","projectLinks","websites","techStack","showMenu","projectRepoButtonRef","color","website","keys","Object","s","Header","Projects","section","ButtonsContainer","Icon","GlobalStyle","createGlobalStyle","isMenuVisible","App","projects","project","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MenuProvider","useState","setMenu","Provider","value","elementRef","getBoundingClientRect","window","scrollY","height","scrollX","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.57c2de64.chunk.js","sourcesContent":["export enum SlideDirection {\n    Left,\n    Right\n}\n\nexport type SliderState = {\n    isPrepared: boolean;\n    playAnimation: boolean;\n    currentImage: string;\n    offsetImage: string;\n    slidePosition: number;\n    slideNextPosition: number;\n    slideDirection: SlideDirection;\n}\n\nexport type SliderActions =\n    | {\n        type: 'prepare', data: {\n            offsetImage: string,\n            slidePosition: number,\n            slideDirection: SlideDirection,\n            playAnimation: boolean,\n        }\n    }\n    | { type: 'start' }\n    | { type: 'end' };\n\nexport type SliderProps = {\n    photos: string[],\n    video?: string;\n}\n\nexport interface SliderBulletProps {\n    onClick: object;\n    isPicked: boolean;\n}\n\nexport interface SliderImageProps {\n    src: any;\n    animate?: number;\n    direction?: SlideDirection;\n}\n\nexport interface SliderButtonProps {\n    onClick: object;\n}\n\nexport type ImageLoadFunction = () => void;","import React from \"react\";\nimport { ProjectLinksWebsites } from \"../components/Project/types\";\n\ntype MenuContextProps = {\n    menu: {\n        show: boolean;\n        position: {\n            top: number;\n            left: number;\n        }\n        buttons: ProjectLinksWebsites[];\n\n    };\n    showMenu?: (elementRef: React.MutableRefObject<HTMLButtonElement | null>, buttons: ProjectLinksWebsites[]) => void;\n    hideMenu?: () => void;\n}\n\nconst defaultState = {\n    menu: {\n        show: false,\n        buttons: [],\n        position: {\n            top: 0,\n            left: 0\n        }\n    },\n};\n\n\nconst MenuContext = React.createContext<MenuContextProps>(defaultState);\n\nexport default MenuContext;\n","import { useEffect, RefObject } from \"react\";\n\nconst useOnClickOutside = <T extends HTMLElement = HTMLElement>(ref: RefObject<T>, handler: (event: MouseEvent | TouchEvent) => void) => {\n\n    useEffect(() => {\n        const listener = (event: MouseEvent | TouchEvent) => {\n            const element = ref?.current\n            if (!element || element.contains(event.target as Node)) return\n\n            handler(event)\n        }\n\n        document.addEventListener(\"mousedown\", listener);\n        document.addEventListener(\"touchstart\", listener);\n\n        return () => {\n            document.removeEventListener(\"mousedown\", listener);\n            document.removeEventListener(\"touchstart\", listener);\n        }\n    }, [ref, handler])\n}\n\nexport default useOnClickOutside;","import styled, { css, keyframes } from \"styled-components\";\n\ntype MenuContainerProps = {\n    show: boolean;\n}\n\nconst fadeIn = keyframes`\n   0% {\n        display: none;\n        opacity: 0;\n    }\n\n    1% {\n        display: block;\n        opacity: 0;\n    }\n\n    100% {\n        display: block;\n        opacity: 1;\n    }\n`\n\nconst fadeInAnimation = css`\n    animation: ${fadeIn} 300ms ease forwards;\n`\n\nexport const MenuContainer = styled.div<MenuContainerProps>`\n    position: absolute;\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12);\n    border-radius: 4px;\n    opacity: 0;\n    transform: none;\n    transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n    background-color: #fff;\n    z-index: 9999;\n\n    ${({ show }) => show ? fadeInAnimation : css``};\n\n    body {\n        overflow: hidden;\n    }\n\n    & ul {\n    margin: 0px;\n    padding: 8px 0;\n    list-style: outside none none;\n    }\n\n    & li {\n        padding: 8px 12px;\n        cursor: pointer;\n        user-select: none;\n        font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\n        font-weight: 400;\n        font-size: 1rem;\n        line-height: 1.5;\n        letter-spacing: 0.001em;\n        display: flex;\n    }\n\n    & li:hover {\n        background-color: rgba(0, 0, 0, 0.04);\n        transition: background-color 0.5s ease-out;\n    }\n\n    & li a {\n        text-decoration: none;\n        color: inherit;\n    }\n    \n    & li a:active {\n        color: inherit;\n    }\n`","import React, { useContext, useRef } from \"react\";\nimport MenuContext from \"../../contexts/menu-context\";\nimport useOnClickOutside from \"../../hooks/use-on-click-outside\";\nimport { MenuContainer } from \"./styled\";\n\nconst Menu = (): JSX.Element => {\n    const ref = useRef<HTMLDivElement | null>(null);\n\n    const { menu, hideMenu } = useContext(MenuContext);\n\n    useOnClickOutside(ref, () => {\n        if (hideMenu) hideMenu!();\n    })\n\n    return menu.show ?\n        (<MenuContainer\n            ref={ref}\n            style={{ left: menu.position.left, top: menu.position.top }}\n            show={menu.show}>\n            <ul>\n                {menu.buttons.map(({ name, url }) => {\n                    return <li key={name}><a href={url}>{name}</a></li>\n                })}\n            </ul>\n        </MenuContainer>) :\n        <></>\n}\n\nexport default Menu;","type TechStackType = {\n    [key: string]: string;\n}\nexport const techStackIcons:TechStackType = {\n    \"heroku\": \"./assets/icons/heroku-icon.svg\",\n    \"angular\": \"./assets/icons/angular-icon.svg\",\n    \"nodejs\": \"./assets/icons/nodejs-icon.svg\",\n    \"express\": \"./assets/icons/express.svg\",\n    \"c#\": \"./assets/icons/c-sharp.svg\",\n    \"cloudinary\": \"./assets/icons/cloudinary.svg\",\n    \"django\": \"./assets/icons/django-icon.svg\",\n    \"java\": \"./assets/icons/java.svg\",\n    \"javascript\": \"./assets/icons/javascript.svg\",\n    \"mongodb\": \"./assets/icons/mongodb.svg\",\n    \"postgresql\": \"./assets/icons/postgresql.svg\",\n    \"python\": \"./assets/icons/python.svg\",\n    \"rabbitmq\": \"./assets/icons/rabbitmq-icon.svg\",\n    \"react\": \"./assets/icons/react.svg\",\n    \"spring\": \"./assets/icons/spring-icon.svg\",\n    \"swift\": \"./assets/icons/swift.svg\",\n    \"typescript\": \"./assets/icons/typescript-icon.svg\",\n    \"vue\": \"./assets/icons/vue.svg\",\n    \"android\": \"./assets/icons/android-icon.svg\"\n}\n","import { SliderActions, SliderState } from \"./types\"\n\nexport const sliderReducer = (state: SliderState, action: SliderActions) => {\n    switch (action.type) {\n        case 'prepare':\n            return {\n                ...state,\n                offsetImage: action.data.offsetImage,\n                slideDirection: action.data.slideDirection,\n                slidePosition: action.data.slidePosition,\n                playAnimation: action.data.playAnimation,\n                isPrepared: true\n            }\n        case 'start':\n            return {\n                ...state,\n                playAnimation: true\n            }\n        case 'end':\n            return {\n                ...state,\n                playAnimation: false,\n                isPrepared: false,\n                currentImage: state.offsetImage,\n                slideNextPosition: state.slidePosition\n            }\n    }\n}","import React from \"react\";\nimport { SlideDirection } from \"./types\";\ninterface DivProps extends React.DetailsHTMLAttributes<HTMLDivElement> {\n    direction?: SlideDirection;\n    animate?: number;\n}\nconst Slide = ({ children, ...props }: DivProps) => {\n    return <div {...props} >\n        {children}\n    </div>\n}\n\nexport default Slide;","import React from \"react\"\n\ntype IntersectionObserverProps = {\n    target: React.RefObject<HTMLDivElement | HTMLVideoElement | HTMLImageElement | null>;\n    onIntersect: IntersectionObserverCallback;\n    threshold?: number;\n    rootMargin?: string;\n\n}\n\nconst useIntersectionObserver = ({ target, onIntersect, threshold = 0.1, rootMargin = '0px' }: IntersectionObserverProps) => {\n    React.useEffect(() => {\n        const observer = new IntersectionObserver(onIntersect, { threshold, rootMargin })\n\n        const current = target?.current;\n        if (current) {\n            observer.observe(current);\n\n            return () => {\n                observer.unobserve(current)\n            }\n        }\n    })\n}\n\nexport default useIntersectionObserver;","import React, { useEffect, useRef } from 'react';\nimport useIntersectionObserver from '../../hooks/use-intersection-observer';\n\ninterface VideoProps extends React.VideoHTMLAttributes<HTMLVideoElement> {\n    animate?: boolean;\n}\n\nconst Video = ({ animate, ...props }: VideoProps) => {\n\n    const videoRef = useRef<HTMLVideoElement | null>(null)\n\n    useEffect(() => {\n        if (animate && videoRef?.current) {\n            videoRef.current.pause()\n        }\n\n        if (animate && props.style?.visibility === \"hidden\" && videoRef?.current) {\n            videoRef.current.load()\n            videoRef.current.pause()\n        }\n\n    }, [animate, props.style?.visibility])\n\n    useIntersectionObserver({\n        target: videoRef,\n        onIntersect: ([{ isIntersecting }], observableElement) => {\n            if (!animate && props.autoPlay && videoRef?.current && props.style?.visibility === \"visible\")\n                if (isIntersecting) {\n                    videoRef.current.play()\n                }\n                else {\n                    videoRef.current.pause()\n                }\n\n        }\n    })\n    return <video ref={videoRef} {...props} />\n}\n\nexport default Video;","import styled, { css, keyframes } from \"styled-components\";\nimport Slide from \"./slide\";\nimport { SlideDirection, SliderBulletProps } from \"./types\";\nimport Video from \"./video\";\nconst animationDuration = 1.5\nconst animationTiming = 'ease'\n\nconst slideInRight = keyframes`\n    from {\n        left: -100%;\n    }\n\n    to {\n        left: 0%;\n    }\n    `;\n\nconst slideInLeft = keyframes`\n    0% {\n        left: 100%;\n    }\n\n    100% {\n        left: 0%;\n    }\n`;\n\nconst slideInRightAnimation = css`\n    left: -100%;\n    animation: ${slideInRight} ${animationDuration}s ${animationTiming};\n`;\n\n\nconst slideInLeftAnimation = css`\n    left: 100%;\n    animation: ${slideInLeft} ${animationDuration}s ${animationTiming};\n`;\n\nconst slideOutLeft = keyframes`\n    0% {\n        left 0%;\n    }    \n\n    100% {\n        left: -100%;\n    }\n`\n\nconst slideOutRight = keyframes`\n    0% {\n        left 0%;\n    }    \n\n    100% {\n        left: 100%;\n    }\n`\nconst slideOutRightAnimation = css`\n    left: -100%;\n    animation: ${slideOutRight} ${animationDuration}s ${animationTiming};\n`;\n\nconst slideOutLeftAnimation = css`\n    left: -100%;\n    animation: ${slideOutLeft} ${animationDuration}s ${animationTiming};\n`;\n\nconst noSlideAnimation = css`\n    left: 100%;\n`;\n\nexport const SliderContainer = styled.div`\n    overflow: hidden;\n    display: block;\n    position: relative;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n   /*  border-top: 1px rgba(0,0,0, .225) solid;\n    border-bottom: 1px rgba(0,0,0, .225) solid; */\n\n    &:before {\n        display: block;\n        content: \"\";\n        padding-top: 58%;\n    }\n`;\n\nexport const SlideMain = styled(Slide)`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    left: 0;\n\n    ${props => props.animate ? props.direction === SlideDirection.Left ? slideOutLeftAnimation : slideOutRightAnimation : css``}\n`;\n\n\nexport const SlideOffset = styled(Slide)`\n    position: absolute;\n    top: 0;\n    left: 100%;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n\n    ${props => props.animate ? props.direction === SlideDirection.Left ? slideInLeftAnimation : slideInRightAnimation : noSlideAnimation}\n`;\n\nexport const SlideVideo = styled(Video)`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    left: 0;\n`;\n\nexport const SlideImage = styled.img`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    left: 0%;\n`;\n\n\nexport const SliderBulletContainer = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    margin-top: 10px;\n    \n\n    @media (max-width: 575px) {\n        bottom: 10px;\n    }\n`;\n\nexport const SliderBullet = styled.button<SliderBulletProps>`\n    background-color: #888;\n    padding: 0;\n    display: block;\n    width: 16px;\n    height: 16px;\n    border: none;\n    overflow: hidden;\n    text-indent: -9998px;\n    margin: 4px;\n    border-radius: 50%;\n    cursor: pointer;\n    transform: scale(${props => props.isPicked ? '1.5, 1.5' : '1, 1'});\n    opacity: ${props => !props.isPicked ? 0.2 : 0.85};\n\n    @media (max-width: 575px) {\n        width: 8px;\n        height: 8px;\n    }\n`;\n\nconst ArrowImage = styled.img`\n    width: 50px;\n    height: 50px;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n`\n\n\nexport const LeftArrowImage = styled(ArrowImage)`\n    left: 10px;\n`\n\n\nexport const RightArrowImage = styled(ArrowImage)`\n    right: 10px;\n`\n\nexport const SliderLeftButton = styled.button`\n    position: absolute;\n    padding: 0;\n    display: block;\n    border: none;\n    width: 30%;\n    height: 100%;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    opacity: 0.3;\n    background: rgba(0, 0, 0, 0) linear-gradient(to right, rgba(0, 0, 0, 0.65) 0px, rgba(0, 0, 0, 0) 100%) repeat scroll 0% 0%;\n\n    transition: opacity 0.15s ease-out 0s;\n\n    &:hover {\n        opacity: 0.8;\n    }\n`\n\nexport const SliderRightButton = styled.button`\n    position: absolute;\n    padding: 0;\n    display: block;\n    border: none;\n    width: 30%;\n    height: 100%;\n    cursor: pointer;\n    top: 0;\n    right: 0;\n    opacity: 0.3;\n    background: rgba(0, 0, 0, 0) linear-gradient(to left, rgba(0, 0, 0, 0.65) 0px, rgba(0, 0, 0, 0) 100%) repeat scroll 0% 0%;\n\n    transition: opacity 0.15s ease-out 0s;\n\n    &:hover {\n        opacity: 0.8;\n    }\n`\n\n","import React, { useEffect, useReducer, useRef } from \"react\";\nimport { sliderReducer } from \"./reducer\";\nimport { LeftArrowImage, RightArrowImage, SlideMain, SlideOffset, SliderBullet, SliderBulletContainer, SliderContainer, SliderLeftButton, SlideImage, SliderRightButton, SlideVideo } from \"./styled\";\nimport { SlideDirection, SliderProps, SliderState } from \"./types\";\n\nconst Slider = ({ photos, video }: SliderProps): JSX.Element => {\n\n    const slidesCount = useRef<number>(photos.length + (video ? 1 : 0))\n\n    const sliderInitialState: SliderState = {\n        playAnimation: false,\n        isPrepared: false,\n        currentImage: photos[0],\n        offsetImage: \"\",\n        slidePosition: 0,\n        slideNextPosition: 0,\n        slideDirection: SlideDirection.Left\n    }\n\n    const sliderRef = useRef<HTMLDivElement>(null);\n\n    const [{\n        playAnimation,\n        isPrepared,\n        currentImage,\n        offsetImage,\n        slidePosition,\n        slideNextPosition,\n        slideDirection\n    }, dispatch] = useReducer(sliderReducer, sliderInitialState);\n\n    useEffect(() => {\n        let current = sliderRef.current;\n        const handleAnimationEnd = () => {\n            dispatch({ type: \"end\" })\n        }\n\n        if (current) {\n            current.addEventListener('animationend', handleAnimationEnd);\n            return function cleanup() {\n                current?.removeEventListener('animationend', handleAnimationEnd);\n            }\n        }\n    })\n\n\n    const handleSlideChange = (index: number) => {\n        if (playAnimation || isPrepared) return;\n        const change = slidePosition - index;\n        if (change !== 0) {\n            dispatch({\n                type: \"prepare\", data: {\n                    offsetImage: photos[index - (video ? 1 : 0)],\n                    slidePosition: index,\n                    slideDirection: (change < 0 ? SlideDirection.Right : SlideDirection.Left),\n                    playAnimation: (video ? true : false) && (slidePosition === 0 || index === 0)\n                }\n            })\n        }\n    }\n\n    const handleSlideChangeButtonClick = (direction: SlideDirection) => {\n        if (playAnimation || isPrepared) return;\n\n        let index = slidePosition + (direction === SlideDirection.Left ? -1 : 1);\n        if (index >= slidesCount.current) index = 0;\n        if (index < 0) index = slidesCount.current - 1;\n\n        dispatch({\n            type: \"prepare\", data: {\n                offsetImage: photos[index - (video ? 1 : 0)],\n                slidePosition: index,\n                slideDirection: direction,\n                playAnimation: (video ? true : false) && (slidePosition === 0 || index === 0)\n            }\n        })\n    }\n\n    return (\n        <>\n            <SliderContainer ref={sliderRef}>\n                <SlideMain animate={playAnimation ? 1 : 0} direction={slideDirection}>\n                    {(!video || slideNextPosition !== 0) && <SlideImage src={currentImage} />}\n                    {video && <SlideVideo animate={playAnimation} autoPlay={true} loop={true} muted src={video}\n                        style={{ visibility: slideNextPosition === 0 ? 'visible' : 'hidden' }} />}\n                </SlideMain>\n\n                <SlideOffset animate={playAnimation ? 1 : 0} direction={slideDirection}>\n                    {\n                        (!video || slidePosition !== 0) &&\n                        (<SlideImage src={offsetImage} onLoad={() => {\n                            if (isPrepared) {\n                                dispatch({ type: \"start\" })\n                            }\n                        }} />)\n                    }\n                    {video && (\n                        <SlideVideo autoPlay={false} style={{ visibility: slidePosition === 0 ? 'visible' : 'hidden' }} src={video} />)\n                    }\n                </SlideOffset>\n\n                <SliderLeftButton onClick={() => handleSlideChangeButtonClick(SlideDirection.Left)}>\n                    <LeftArrowImage src=\"./assets/left-arrow.svg\" />\n                </SliderLeftButton>\n                <SliderRightButton onClick={() => handleSlideChangeButtonClick(SlideDirection.Right)}>\n                    <RightArrowImage src=\"./assets/right-arrow.svg\" />\n                </SliderRightButton>\n            </SliderContainer>\n            <SliderBulletContainer>\n                {\n                    [...Array(slidesCount.current)].map((_, index) => {\n                        return <SliderBullet key={index} isPicked={index === slidePosition}\n                            onClick={() => handleSlideChange(index)}>index</SliderBullet>\n                    })\n                }\n            </SliderBulletContainer>\n        </>\n    )\n\n}\n\nexport default Slider;","import styled from \"styled-components\";\nimport TechStackModel from \"../models/tech-stack\";\n\n\nconst Container = styled.div`\n    background-color: #fff;\n    border: 1px solid rgba(0, 0, 0, .125);\n    border-radius: 50%;\n    display: flex;\n    margin: 5px;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n`;\n\nconst Image = styled.img`\n    width: 50px;\n    height: 50px;\n`;\n\nconst TechStack = ({ name, icon }: TechStackModel): JSX.Element => {\n\n    return <Container>\n        <Image src={icon} />\n    </Container>\n}\n\nexport default TechStack;","export const breakpoints = {\n    mobile: '425px'\n}\n","import styled from \"styled-components\";\nimport { breakpoints } from \"../../helpers\";\n\nexport const ProjectContainer = styled.div`\n    background: #fff;\n    border-radius: .25rem;\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12);\n    margin: 2.5rem auto;\n    position: relative;\n    max-width: 700px;\n    display: grid;\n`;\n\nexport const ProjectBody = styled.div`\n    padding: 1.5rem;\n    text-align: left;\n`;\n\nexport const ProejctHeader = styled.div`\n    padding: 1.5rem;\n    text-align: left;\n    display: flex;\n    flex-wrap: nowrap;\n    align-items: center;\n\n    @media (max-width: ${breakpoints.mobile}) {\n        flex-wrap: wrap;\n\n        & > div  {\n            justify-content: center;\n            display: flex;\n            align-items: center;\n        }\n\n        & > div > div {\n            text-algin: center;\n        }\n    }\n`;\nexport const ProjectTitleContainer = styled.div`\n    padding-left: 1.5rem;\n    @media (max-width: ${breakpoints.mobile}) {\n        padding-left: 0;\n        flex-basis: 100%;\n        max-width: 100%;\n        padding-top: 15px;\n    }\n`\nexport const ProjectTitle = styled.div` \n    width: auto;\n    text-align: unset;\n    font-family: \"Roboto\",sans-serif;\n    padding-bottom: .5rem;\n\n    & > h2 { \n        margin: 0 0 0.25rem;\n    }\n    \n`;\n\nexport const ProjectLogoContainer = styled.div`\n    @media (max-width: ${breakpoints.mobile}) {\n        flex-basis: 100%;\n        max-width: 100%;\n    }\n`;\n\nexport const ProjectLogoLink = styled.a`\n    \n`;\n\nexport const ProjectLogoButton = styled.button`\n    outline: 0;\n    overflow: hidden;\n    cursor: pointer;\n    background: transparent;\n    border: none;\n`;\n\nexport const ProjectLogo = styled.img`\n    cursor: pointer;\n    width: 50px;\n    height: 50px;\n`;\n\nexport const ProjectDescriptionContainer = styled.div`\n    position: relative;\n    width: 100%;\n    margin-top: 15px;\n    margin-bottom: 15px;\n    font-size: .9rem;\n    font-weight: 400;\n    color: #747373;\n    font-family: \"Roboto\",sans-serif;\n    line-height: 1.4;\n`;\n\nexport const ProjectTechStacksContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nconst linkColor = \"#5673c1\"\n\nexport const ProjectWebsiteLink = styled.div`\n    margin-bottom: .35rem;\n\n    & a  {\n        color: ${linkColor};\n        transition: all .3s;\n        position: relative;\n        text-decoration: none;\n        cursor: pointer;      \n\n        &:hover {\n            color: ${linkColor};\n            text-decoration: underline;\n        }\n    }\n`;\n","import React, { useContext, useRef } from \"react\";\nimport MenuContext from \"../../contexts/menu-context\";\nimport { techStackIcons } from \"../../data/icons\";\nimport Slider from \"../Slider\";\nimport TechStack from \"../TechStack\";\nimport { ProejctHeader, ProjectBody, ProjectContainer, ProjectDescriptionContainer, ProjectLogo, ProjectLogoButton, ProjectLogoContainer, ProjectLogoLink, ProjectTechStacksContainer, ProjectTitle, ProjectTitleContainer, ProjectWebsiteLink } from \"./styled\";\nimport { ProjectProps } from \"./types\";\n\n\nconst Project = ({\n    title,\n    subtitle,\n    photos,\n    video,\n    desc,\n    projectLinks,\n    websites,\n    techStack\n}: ProjectProps): JSX.Element => {\n\n    const { showMenu } = useContext(MenuContext);\n    const projectRepoButtonRef = useRef<HTMLButtonElement | null>(null)\n\n    return <ProjectContainer>\n        <ProejctHeader>\n            <ProjectLogoContainer>\n                {\n                    projectLinks.websites.length === 1 ?\n                        (<ProjectLogoLink href={projectLinks.websites[0]?.url}>\n                            <ProjectLogo src={projectLinks.icon} />\n                        </ProjectLogoLink>) :\n                        (<ProjectLogoButton ref={projectRepoButtonRef}\n                            onClick={() => {\n                                if (showMenu) showMenu(projectRepoButtonRef, projectLinks.websites)\n                            }}>\n                            <ProjectLogo src={projectLinks.icon} />\n                        </ProjectLogoButton>)\n                }\n            </ProjectLogoContainer>\n            <ProjectTitleContainer>\n                <div>\n                    <ProjectTitle>\n                        <h2>{title}</h2>\n                        {subtitle && <span style={{ color: \"#747373\" }}>{subtitle}</span>}\n                    </ProjectTitle>\n                    {websites.map((_, index) => {\n                        const website = _ as any;\n                        const keys = Object.keys(website)\n                        return <ProjectWebsiteLink key={index}><a href={website[keys[0]]}>{keys[0]}</a></ProjectWebsiteLink>\n                    })}\n                </div>\n            </ProjectTitleContainer>\n\n        </ProejctHeader>\n        <Slider video={video} photos={photos} />\n        <ProjectBody>\n\n            <ProjectDescriptionContainer>\n                <span>{desc}</span>\n            </ProjectDescriptionContainer>\n            <ProjectTechStacksContainer>\n                {\n                    techStack.map((s, index) => {\n                        return <TechStack key={`stack-${index}`} name={s} icon={techStackIcons[s]} />\n                    })\n                }\n            </ProjectTechStacksContainer>\n        </ProjectBody>\n    </ProjectContainer>;\n};\n\nexport default Project;\n","import React, { useContext } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Menu from \"./components/Menu\";\nimport Project from \"./components/Project\";\nimport MenuContext from \"./contexts/menu-context\";\nimport data from \"./data/projects.json\";\nimport { breakpoints } from \"./helpers\";\n\nconst Container = styled.div`\n    text-align: justify;\n    max-width: 950px;\n    padding: .25rem 0;\n    margin: auto auto;\n`;\n\nconst Header = styled.div`\n    padding: .5rem 3rem;\n    display: grid;\n    font-size: calc(10px + 2vmin);\n    color: black;\n    line-height: 1.5;\n\n    & > div {\n      font-size: 18px;\n      font-family: Roboto,sans-serif;\n      font-weight: 400;\n      line-height: 30px;\n      color: #555;\n    }\n\n    @media(max-width: ${breakpoints.mobile}) {\n      padding: .5rem 1rem;\n    }\n`;\n\nconst Projects = styled.section`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nconst ButtonsContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Icon = styled.img`\n    cursor: pointer;\n    width: 50px;\n    height: 50px;\n    padding: 10px;\n`;\n\ntype GlobalStyleProps = {\n  isMenuVisible: boolean;\n}\n\nconst GlobalStyle = createGlobalStyle<GlobalStyleProps>`\n  body {\n    background-color: #fff;\n    margin: 0;\n    font-family: \"Roboto\",sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    overflow: ${({ isMenuVisible }) => isMenuVisible ? 'hidden' : 'unset'};\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n  }\n`\nconst App = (): JSX.Element => {\n\n  const { menu } = useContext(MenuContext);\n\n  return (\n    <>\n      <GlobalStyle isMenuVisible={menu.show} />\n      <Container>\n        <Header>\n          <h1>Hi,</h1>\n          <div>\n            My name is Marcin Mieszczak. I'm a responsible and hardworking Software Engineer.{'\\n'}\n            I graduated from AGH UST with Bachelor of Science in Computer Science Degree.{'\\n'}\n            During my studies, I have created many programs in Javascript, Java, C#, C++ and Python including YouTube-like and Instagram-like applications and application to simulate Grain Growth in 2D and 3D spaces using parallel computing.{'\\n'}\n            In my spare time, I've also created some simple games for Android and iOS.{'\\n'}\n            I am familiar with technologies such as React, Angular, Vue, Node.js, Django and Spring Boot.{'\\n'}\n            I'm currently working as a Software Engineer in <a href=\"https://www.eurofirany.com.pl/\">Eurofirany</a>. I've started to work here full-time in November 2021 and due that time I've increased my knowledge a lot.{'\\n'}{'\\n'}\n            During my work I've developed a web application frontend in React. The application facilitates the management of shipments in the warehouse.{'\\n'}\n            During the development of this application, I created packages with components for use in future projects.{'\\n'}\n            I am currently focusing on developing a mobile app in React Native for scanning and ordering products.{'\\n'}\n          </div>\n        </Header>\n        <ButtonsContainer>\n          <a href=\"./assets/Marcin_Mieszczak_CV.pdf\"> <Icon src=\"./assets/cv1.svg\" /> </a>\n          <a href=\"https://github.com/marm007?tab=repositories\"> <Icon src=\"./assets/github-icon.svg\" /> </a>\n        </ButtonsContainer>\n        <Projects>\n          {data.projects.map(project => {\n            return <Project\n              key={`project-${project.title}`}\n              title={project.title}\n              subtitle={project.subtitle}\n              photos={project.photos}\n              video={project.video}\n              desc={project.desc}\n              websites={project.websites}\n              techStack={project.techStack}\n              projectLinks={project.projectLinks} />\n          })}\n\n        </Projects>\n\n        <Menu />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from \"react\";\nimport MenuContext from \"../contexts/menu-context\";\nimport { ProjectLinksWebsites } from \"../components/Project/types\";\n\nconst MenuProvider = ({ children }: { children: React.ReactNode }): JSX.Element => {\n\n    const [menu, setMenu] = useState<{\n        show: boolean;\n        position: {\n            top: number;\n            left: number;\n        }\n        buttons: ProjectLinksWebsites[];\n    }>({\n        show: false,\n        position: {\n            top: 0,\n            left: 0\n        },\n        buttons: []\n    })\n\n    const showMenu = (elementRef: React.MutableRefObject<HTMLButtonElement | null>, buttons: ProjectLinksWebsites[]) => {\n        const position = elementRef.current?.getBoundingClientRect();\n        if (position) {\n            const top = position.top + window.scrollY + position.height;\n            const left = position.left + window.scrollX - 15;\n\n            setMenu({ buttons: buttons, position: { top: top, left: left }, show: true })\n        }\n    }\n\n    const hideMenu = () => {\n        setMenu({\n            show: false,\n            position: {\n                top: 0,\n                left: 0\n            },\n            buttons: []\n        })\n    }\n\n    return <MenuContext.Provider value={{ menu, showMenu, hideMenu }}>{children}</MenuContext.Provider>;\n}\n\nexport default MenuProvider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport MenuProvider from \"./providers/menu-provider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MenuProvider>\n      <App />\n    </MenuProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}