{"version":3,"sources":["components/Slider/types.tsx","data/icons.tsx","components/Slider/reducer.tsx","components/Slider/slide.tsx","hooks/use-intersection-observer.tsx","components/Slider/video.tsx","components/Slider/styled.tsx","components/Slider/index.tsx","components/TechStack.tsx","components/Project/styled.tsx","components/Project/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SlideDirection","techStackIcons","sliderReducer","state","action","type","offsetImage","data","slideDirection","slidePosition","playAnimation","isPrepared","currentImage","slideNextPosition","Slide","children","props","useIntersectionObserver","target","onIntersect","threshold","rootMargin","React","useEffect","observer","IntersectionObserver","current","observe","unobserve","Video","animate","videoRef","useRef","pause","style","visibility","load","observableElement","isIntersecting","autoPlay","play","ref","animationDuration","animationTiming","slideInRight","keyframes","slideInLeft","slideInRightAnimation","css","slideInLeftAnimation","slideOutLeft","slideOutRight","slideOutRightAnimation","slideOutLeftAnimation","noSlideAnimation","SliderContainer","styled","div","SlideMain","direction","Left","SlideOffset","SlideVideo","SlideImage","img","SliderBulletContainer","SliderBullet","button","isPicked","ArrowImage","LeftArrowImage","RightArrowImage","SliderLeftButton","SliderRightButton","Slider","photos","video","slidesCount","length","sliderInitialState","sliderRef","useReducer","dispatch","handleAnimationEnd","addEventListener","removeEventListener","handleSlideChangeButtonClick","index","src","loop","muted","onLoad","onClick","Right","Array","map","_","change","console","log","handleSlideChange","Container","Image","TechStack","name","icon","ProjectContainer","ProjectBody","ProejctHeader","ProjectTitle","ProjectRepoLink","a","ProjectGithubLogo","ProjectDescriptionContainer","ProjectTechStacksContainer","linkColor","ProjectWebsiteLink","Project","title","subtitle","desc","repositoryURL","frontendURL","backendURL","techStack","href","paddingLeft","color","s","Header","Projects","section","App","projects","project","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8a728ae.chunk.js","sourcesContent":["export enum SlideDirection {\n    Left,\n    Right\n}\n\nexport type SliderState = {\n    isPrepared: boolean;\n    playAnimation: boolean;\n    currentImage: string;\n    offsetImage: string;\n    slidePosition: number;\n    slideNextPosition: number;\n    slideDirection: SlideDirection;\n}\n\nexport type SliderActions =\n    | {\n        type: 'prepare', data: {\n            offsetImage: string,\n            slidePosition: number,\n            slideDirection: SlideDirection,\n            playAnimation: boolean,\n        }\n    }\n    | { type: 'start' }\n    | { type: 'end' };\n\nexport type SliderProps = {\n    photos: string[],\n    video?: string;\n}\n\nexport interface SliderBulletProps {\n    onClick: object;\n    isPicked: boolean;\n}\n\nexport interface SliderImageProps {\n    src: any;\n    animate?: number;\n    direction?: SlideDirection;\n}\n\nexport interface SliderButtonProps {\n    onClick: object;\n}\n\nexport type ImageLoadFunction = () => void;","type TechStackType = {\n    [key: string]: string;\n}\nexport const techStackIcons:TechStackType = {\n    \"heroku\": \"./assets/icons/heroku-icon.svg\",\n    \"angular\": \"./assets/icons/angular-icon.svg\",\n    \"nodejs\": \"./assets/icons/nodejs-icon.svg\",\n    \"express\": \"./assets/icons/express.svg\",\n    \"c#\": \"./assets/icons/c-sharp.svg\",\n    \"cloudinary\": \"./assets/icons/cloudinary.svg\",\n    \"django\": \"./assets/icons/django-icon.svg\",\n    \"java\": \"./assets/icons/java.svg\",\n    \"javascript\": \"./assets/icons/javascript.svg\",\n    \"mongodb\": \"./assets/icons/mongodb.svg\",\n    \"postgresql\": \"./assets/icons/postgresql.svg\",\n    \"python\": \"./assets/icons/python.svg\",\n    \"rabbitmq\": \"./assets/icons/rabbitmq-icon.svg\",\n    \"react\": \"./assets/icons/react.svg\",\n    \"spring\": \"./assets/icons/spring-icon.svg\",\n    \"swift\": \"./assets/icons/swift.svg\",\n    \"typescript\": \"./assets/icons/typescript-icon.svg\",\n    \"vue\": \"./assets/icons/vue.svg\",\n}\n","import { SliderActions, SliderState } from \"./types\"\n\nexport const sliderReducer = (state: SliderState, action: SliderActions) => {\n    switch (action.type) {\n        case 'prepare':\n            return {\n                ...state,\n                offsetImage: action.data.offsetImage,\n                slideDirection: action.data.slideDirection,\n                slidePosition: action.data.slidePosition,\n                playAnimation: action.data.playAnimation,\n                isPrepared: true\n            }\n        case 'start':\n            return {\n                ...state,\n                playAnimation: true\n            }\n        case 'end':\n            return {\n                ...state,\n                playAnimation: false,\n                isPrepared: false,\n                currentImage: state.offsetImage,\n                slideNextPosition: state.slidePosition\n            }\n    }\n}","import React from \"react\";\nimport { SlideDirection } from \"./types\";\ninterface DivProps extends React.DetailsHTMLAttributes<HTMLDivElement> {\n    direction?: SlideDirection;\n    animate?: number;\n}\nconst Slide = ({ children, ...props }: DivProps) => {\n    return <div {...props} >\n        {children}\n    </div>\n}\n\nexport default Slide;","import React from \"react\"\n\ntype IntersectionObserverProps = {\n    target: React.RefObject<HTMLDivElement | HTMLVideoElement | HTMLImageElement | null>;\n    onIntersect: IntersectionObserverCallback;\n    threshold?: number;\n    rootMargin?: string;\n\n}\n\nconst useIntersectionObserver = ({ target, onIntersect, threshold = 0.1, rootMargin = '0px' }: IntersectionObserverProps) => {\n    React.useEffect(() => {\n        const observer = new IntersectionObserver(onIntersect, { threshold, rootMargin })\n\n        const current = target?.current;\n        if (current) {\n            observer.observe(current);\n\n            return () => {\n                observer.unobserve(current)\n            }\n        }\n    })\n}\n\nexport default useIntersectionObserver;","import React, { useEffect, useRef } from 'react';\nimport useIntersectionObserver from '../../hooks/use-intersection-observer';\n\ninterface VideoProps extends React.VideoHTMLAttributes<HTMLVideoElement> {\n    animate?: boolean;\n}\n\nconst Video = ({ animate, ...props }: VideoProps) => {\n\n    const videoRef = useRef<HTMLVideoElement | null>(null)\n\n    useEffect(() => {\n        if (animate && videoRef?.current) {\n            videoRef.current.pause()\n        }\n\n        if(animate && props.style?.visibility === \"hidden\" && videoRef?.current) {\n            videoRef.current.load()\n        }\n       \n    }, [animate, props.style?.visibility])\n\n    useIntersectionObserver({\n        target: videoRef,\n        onIntersect: ([{ isIntersecting }], observableElement) => {\n            if (!animate && props.autoPlay && videoRef?.current)\n                if (isIntersecting) {\n                    videoRef.current.play()\n                }\n                else {\n                    videoRef.current.pause()\n                }\n\n        }\n    })\n    return <video ref={videoRef} {...props} />\n}\n\nexport default Video;","import styled, { css, keyframes } from \"styled-components\";\nimport Slide from \"./slide\";\nimport { SlideDirection, SliderBulletProps } from \"./types\";\nimport Video from \"./video\";\nconst animationDuration = 1.5\nconst animationTiming = 'ease'\n\nconst slideInRight = keyframes`\n    from {\n        left: -100%;\n    }\n\n    to {\n        left: 0%;\n    }\n    `;\n\nconst slideInLeft = keyframes`\n    0% {\n        left: 100%;\n    }\n\n    100% {\n        left: 0%;\n    }\n`;\n\nconst slideInRightAnimation = css`\n    left: -100%;\n    animation: ${slideInRight} ${animationDuration}s ${animationTiming};\n`;\n\n\nconst slideInLeftAnimation = css`\n    left: 100%;\n    animation: ${slideInLeft} ${animationDuration}s ${animationTiming};\n`;\n\nconst slideOutLeft = keyframes`\n    0% {\n        left 0%;\n    }    \n\n    100% {\n        left: -100%;\n    }\n`\n\nconst slideOutRight = keyframes`\n    0% {\n        left 0%;\n    }    \n\n    100% {\n        left: 100%;\n    }\n`\nconst slideOutRightAnimation = css`\n    left: -100%;\n    animation: ${slideOutRight} ${animationDuration}s ${animationTiming};\n`;\n\nconst slideOutLeftAnimation = css`\n    left: -100%;\n    animation: ${slideOutLeft} ${animationDuration}s ${animationTiming};\n`;\n\nconst noSlideAnimation = css`\n    left: 100%;\n`;\n\nexport const SliderContainer = styled.div`\n    overflow: hidden;\n    display: block;\n    position: relative;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n   /*  border-top: 1px rgba(0,0,0, .225) solid;\n    border-bottom: 1px rgba(0,0,0, .225) solid; */\n\n    &:before {\n        display: block;\n        content: \"\";\n        padding-top: 58%;\n    }\n`;\n\nexport const SlideMain = styled(Slide)`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    left: 0;\n\n    ${props => props.animate ? props.direction === SlideDirection.Left ? slideOutLeftAnimation : slideOutRightAnimation : css``}\n`;\n\n\nexport const SlideOffset = styled(Slide)`\n    position: absolute;\n    top: 0;\n    left: 100%;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n\n    ${props => props.animate ? props.direction === SlideDirection.Left ? slideInLeftAnimation : slideInRightAnimation : noSlideAnimation}\n`;\n\nexport const SlideVideo = styled(Video)`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    left: 0;\n`;\n\nexport const SlideImage = styled.img`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    left: 0%;\n`;\n\n\nexport const SliderBulletContainer = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    margin-top: 10px;\n    \n\n    @media (max-width: 575px) {\n        bottom: 10px;\n    }\n`;\n\nexport const SliderBullet = styled.button<SliderBulletProps>`\n    background-color: #888;\n    padding: 0;\n    display: block;\n    width: 16px;\n    height: 16px;\n    border: none;\n    overflow: hidden;\n    text-indent: -9998px;\n    margin: 4px;\n    border-radius: 50%;\n    cursor: pointer;\n    transform: scale(${props => props.isPicked ? '1.5, 1.5' : '1, 1'});\n    opacity: ${props => !props.isPicked ? 0.2 : 0.85};\n\n    @media (max-width: 575px) {\n        width: 8px;\n        height: 8px;\n    }\n`;\n\nconst ArrowImage = styled.img`\n    width: 50px;\n    height: 50px;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n`\n\n\nexport const LeftArrowImage = styled(ArrowImage)`\n    left: 10px;\n`\n\n\nexport const RightArrowImage = styled(ArrowImage)`\n    right: 10px;\n`\n\nexport const SliderLeftButton = styled.button`\n    position: absolute;\n    padding: 0;\n    display: block;\n    border: none;\n    width: 30%;\n    height: 100%;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    opacity: 0.3;\n    background: rgba(0, 0, 0, 0) linear-gradient(to right, rgba(0, 0, 0, 0.65) 0px, rgba(0, 0, 0, 0) 100%) repeat scroll 0% 0%;\n\n    transition: opacity 0.15s ease-out 0s;\n\n    &:hover {\n        opacity: 0.8;\n    }\n`\n\nexport const SliderRightButton = styled.button`\n    position: absolute;\n    padding: 0;\n    display: block;\n    border: none;\n    width: 30%;\n    height: 100%;\n    cursor: pointer;\n    top: 0;\n    right: 0;\n    opacity: 0.3;\n    background: rgba(0, 0, 0, 0) linear-gradient(to left, rgba(0, 0, 0, 0.65) 0px, rgba(0, 0, 0, 0) 100%) repeat scroll 0% 0%;\n\n    transition: opacity 0.15s ease-out 0s;\n\n    &:hover {\n        opacity: 0.8;\n    }\n`\n\n","import React, { useEffect, useReducer, useRef } from \"react\";\nimport { sliderReducer } from \"./reducer\";\nimport { LeftArrowImage, RightArrowImage, SlideMain, SlideOffset, SliderBullet, SliderBulletContainer, SliderContainer, SliderLeftButton, SlideImage, SliderRightButton, SlideVideo } from \"./styled\";\nimport { SlideDirection, SliderProps, SliderState } from \"./types\";\n\nconst Slider = ({ photos, video }: SliderProps): JSX.Element => {\n\n    const slidesCount = useRef<number>(photos.length + (video ? 1 : 0))\n\n    const sliderInitialState: SliderState = {\n        playAnimation: false,\n        isPrepared: false,\n        currentImage: photos[0],\n        offsetImage: \"\",\n        slidePosition: 0,\n        slideNextPosition: 0,\n        slideDirection: SlideDirection.Left\n    }\n\n    const sliderRef = useRef<HTMLDivElement>(null);\n\n    const [{\n        playAnimation,\n        isPrepared,\n        currentImage,\n        offsetImage,\n        slidePosition,\n        slideNextPosition,\n        slideDirection\n    }, dispatch] = useReducer(sliderReducer, sliderInitialState);\n\n    useEffect(() => {\n        let current = sliderRef.current;\n        const handleAnimationEnd = () => {\n            dispatch({ type: \"end\" })\n        }\n\n        if (current) {\n            current.addEventListener('animationend', handleAnimationEnd);\n            return function cleanup() {\n                current?.removeEventListener('animationend', handleAnimationEnd);\n            }\n        }\n    })\n\n\n    const handleSlideChange = (index: number) => {\n        if (playAnimation || isPrepared) return;\n        const change = slidePosition - index;\n        if (change !== 0) {\n            console.log()\n            dispatch({\n                type: \"prepare\", data: {\n                    offsetImage: photos[index - (video ? 1 : 0)],\n                    slidePosition: index,\n                    slideDirection: (change < 0 ? SlideDirection.Right : SlideDirection.Left),\n                    playAnimation: (video ? true : false) && (slidePosition === 0 || index === 0)\n                }\n            })\n        }\n    }\n\n    const handleSlideChangeButtonClick = (direction: SlideDirection) => {\n        if (playAnimation || isPrepared) return;\n\n        let index = slidePosition + (direction === SlideDirection.Left ? -1 : 1);\n        if (index >= slidesCount.current) index = 0;\n        if (index < 0) index = slidesCount.current - 1;\n\n        dispatch({\n            type: \"prepare\", data: {\n                offsetImage: photos[index - (video ? 1 : 0)],\n                slidePosition: index,\n                slideDirection: direction,\n                playAnimation: (video ? true : false) && (slidePosition === 0 || index === 0)\n            }\n        })\n    }\n\n    return (\n        <>\n            <SliderContainer ref={sliderRef}>\n                <SlideMain animate={playAnimation ? 1 : 0} direction={slideDirection}>\n                    {(!video || slideNextPosition !== 0) && <SlideImage src={currentImage} />}\n                    {video && <SlideVideo animate={playAnimation} autoPlay={true} loop={true} muted src={video}\n                        style={{ visibility: slideNextPosition === 0 ? 'visible' : 'hidden' }} />}\n                </SlideMain>\n\n                <SlideOffset animate={playAnimation ? 1 : 0} direction={slideDirection}>\n                    {\n                        (!video || slidePosition !== 0) &&\n                        (<SlideImage src={offsetImage} onLoad={() => {\n                            if (isPrepared) {\n                                dispatch({ type: \"start\" })\n                            }\n                        }} />)\n                    }\n                    {video && (\n                        <SlideVideo autoPlay={false} style={{ visibility: slidePosition === 0 ? 'visible' : 'hidden' }} src={video} />)\n                    }\n                </SlideOffset>\n\n                <SliderLeftButton onClick={() => handleSlideChangeButtonClick(SlideDirection.Left)}>\n                    <LeftArrowImage src=\"./assets/left-arrow.svg\" />\n                </SliderLeftButton>\n                <SliderRightButton onClick={() => handleSlideChangeButtonClick(SlideDirection.Right)}>\n                    <RightArrowImage src=\"./assets/right-arrow.svg\" />\n                </SliderRightButton>\n            </SliderContainer>\n            <SliderBulletContainer>\n                {\n                    [...Array(slidesCount.current)].map((_, index) => {\n                        return <SliderBullet key={index} isPicked={index === slidePosition}\n                            onClick={() => handleSlideChange(index)}>index</SliderBullet>\n                    })\n                }\n            </SliderBulletContainer>\n        </>\n    )\n\n}\n\nexport default Slider;","import styled from \"styled-components\";\nimport TechStackModel from \"../models/tech-stack\";\n\n\nconst Container = styled.div`\n    background-color: #fff;\n    border: 1px solid rgba(0, 0, 0, .125);\n    border-radius: 50%;\n    display: flex;\n    margin: 5px;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n`;\n\nconst Image = styled.img`\n    width: 50px;\n    height: 50px;\n`;\n\nconst TechStack = ({ name, icon }: TechStackModel): JSX.Element => {\n\n    return <Container>\n        <Image src={icon} />\n    </Container>\n}\n\nexport default TechStack;","import styled from \"styled-components\";\n\nexport const ProjectContainer = styled.div`\n    background: #fff;\n    border-radius: .25rem;\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12);\n    margin: 2.5rem auto;\n    position: relative;\n    max-width: 700px;\n    display: grid;\n`;\n\nexport const ProjectBody = styled.div`\n    padding: 1.5rem;\n    text-align: left;\n`;\n\nexport const ProejctHeader = styled.div`\n    padding: 1.5rem;\n    text-align: left;\n    display: flex;\n    flex-wrap: nowrap;\n    align-items: center;\n`;\n\nexport const ProjectTitle = styled.div` \n    width: auto;\n    text-align: unset;\n    font-family: \"Roboto\",sans-serif;\n    padding-bottom: .5rem;\n\n    & > h2 { \n        margin: 0 0 0.25rem;\n    }\n`;\n\nexport const ProjectRepoLink = styled.a`\n`;\n\nexport const ProjectGithubLogo = styled.img`\n    cursor: pointer;\n    width: 50px;\n    height: 50px;\n`;\n\nexport const ProjectDescriptionContainer = styled.div`\n    position: relative;\n    width: 100%;\n    margin-top: 15px;\n    margin-bottom: 15px;\n    font-size: .9rem;\n    font-weight: 400;\n    color: #747373;\n    font-family: \"Roboto\",sans-serif;\n`;\n\nexport const ProjectTechStacksContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nconst linkColor = \"#5673c1\"\n\nexport const ProjectWebsiteLink = styled.div`\n    margin-bottom: .35rem;\n\n    & a  {\n        color: ${linkColor};\n        transition: all .3s;\n        position: relative;\n        text-decoration: none;\n        cursor: pointer;      \n\n        &:hover {\n            color: ${linkColor};\n            text-decoration: underline;\n        }\n    }\n`;","import React from \"react\";\nimport { techStackIcons } from \"../../data/icons\";\nimport Slider from \"../Slider\";\nimport TechStack from \"../TechStack\";\nimport { ProejctHeader, ProjectBody, ProjectContainer, ProjectDescriptionContainer, ProjectGithubLogo, ProjectRepoLink, ProjectTechStacksContainer, ProjectTitle, ProjectWebsiteLink } from \"./styled\";\nimport { ProjectProps } from \"./types\";\n\n\nconst Project = ({\n    title,\n    subtitle,\n    photos,\n    video,\n    desc,\n    repositoryURL,\n    frontendURL,\n    backendURL,\n    techStack\n}: ProjectProps): JSX.Element => {\n    return <ProjectContainer>\n        <ProejctHeader>\n            <div>\n                <ProjectRepoLink href={repositoryURL}>\n                    <ProjectGithubLogo src=\"./assets/github-icon.svg\" />\n                </ProjectRepoLink>\n            </div>\n            <div style={{ paddingLeft: '1.5rem' }}>\n\n                <ProjectTitle>\n                    <h2>{title}</h2>\n                    {subtitle && <span style={{ color: \"#747373\" }}>{subtitle}</span>}\n                </ProjectTitle>\n                {frontendURL && <ProjectWebsiteLink ><a href={frontendURL}>Live demo</a></ProjectWebsiteLink>}\n                {backendURL && <ProjectWebsiteLink ><a href={backendURL}>API</a></ProjectWebsiteLink>}\n            </div>\n\n        </ProejctHeader>\n        <Slider video={video} photos={photos} />\n        <ProjectBody>\n\n            <ProjectDescriptionContainer>\n                <span>{desc}</span>\n            </ProjectDescriptionContainer>\n            <ProjectTechStacksContainer>\n                {\n                    techStack.map((s, index) => {\n                        return <TechStack key={`stack-${index}`} name={s} icon={techStackIcons[s]} />\n                    })\n                }\n            </ProjectTechStacksContainer>\n        </ProjectBody>\n    </ProjectContainer>;\n};\n\nexport default Project;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Project from \"./components/Project\";\nimport data from \"./data/projects.json\";\n\nconst Container = styled.div`\n    text-align: justify;\n    max-width: 950px;\n    padding: .25rem 0;\n    margin: auto auto;\n`;\n\nconst Header = styled.div`\n    padding: .5rem 3rem;\n    display: grid;\n    font-size: calc(10px + 2vmin);\n    color: black;\n    line-height: 1.5;\n\n    & > span {\n      font-size: 16px;\n    }\n\n    @media(max-width: 576px) {\n      padding: .5rem 0.5rem;\n    }\n`;\n\nconst Projects = styled.section`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nconst App = (): JSX.Element => {\n\n  return (\n    <Container>\n      <Header>\n        <h1>Hi,</h1>\n        <span>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus\n          quis mauris sodales libero mattis lobortis. Praesent nisi erat,\n          aliquet in bibendum a, lobortis a urna. Suspendisse potenti. Nunc\n          dignissim consectetur varius. Proin suscipit massa ipsum, nec\n          consequat leo posuere sit amet. Morbi pellentesque sem et tortor\n          consequat, pellentesque lacinia justo accumsan. Nunc suscipit lacus ut\n          risus venenatis egestas.\n        </span>\n      </Header>\n\n      <Projects>\n        {data.projects.map(project => {\n          return <Project\n            key={`project-${project.title}`}\n            title={project.title}\n            subtitle={project.subtitle}\n            photos={project.photos}\n            video={project.video}\n            desc={project.desc}\n            techStack={project.techStack}\n            frontendURL={project.frontendURL}\n            backendURL={project.backendURL}\n            repositoryURL={project.repositoryURL} />\n        })}\n\n      </Projects>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}