{"version":3,"sources":["components/Slider/types.tsx","data/icons.tsx","components/Slider/reducer.tsx","components/Image/index.tsx","components/Slider/styled.tsx","components/Slider/index.tsx","components/TechStack.tsx","components/Project/styled.tsx","components/Project/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SlideDirection","techStackIcons","sliderReducer","state","action","type","offsetImage","data","slideDirection","slidePosition","isPrepared","playAnimation","currentImage","Image","props","alt","animationDuration","animationTiming","slideInRight","keyframes","slideInLeft","slideInRightAnimation","css","slideInLeftAnimation","slideOutLeft","slideOutRight","slideOutRightAnimation","slideOutLeftAnimation","noSlideAnimation","SliderContainer","styled","div","SliderImage","animate","direction","Left","SliderOffsetImage","SliderBulletContainer","SliderBullet","button","isPicked","ArrowImage","img","LeftArrowImage","RightArrowImage","SliderLeftButton","SliderRightButton","Slider","photos","sliderInitialState","sliderRef","useRef","useReducer","dispatch","useEffect","current","handleAnimationEnd","addEventListener","removeEventListener","handleImageChangeButtonClick","index","length","ref","src","onLoad","onClick","Right","map","_","change","handleImageChange","Container","TechStack","name","icon","ProjectContainer","ProjectBody","ProejctHeader","ProjectTitle","ProjectRepoLink","a","ProjectGithubLogo","ProjectDescriptionContainer","ProjectTechStacksContainer","ProjectWebsiteLink","Project","title","desc","video","repositoryURL","frontendURL","backendURL","techStack","href","style","paddingLeft","marginLeft","short","s","Header","Projects","section","App","projects","project","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4fa8ede.chunk.js","sourcesContent":["export enum SlideDirection {\n    Left,\n    Right\n}\n\nexport type SliderState = {\n    isPrepared: boolean;\n    playAnimation: boolean;\n    currentImage: string;\n    offsetImage: string;\n    slidePosition: number;\n    slideDirection: SlideDirection;\n}\n\nexport type SliderActions =\n    | {\n        type: 'prepare', data: {\n            offsetImage: string,\n            slidePosition: number,\n            slideDirection: SlideDirection,\n        }\n    }\n    | { type: 'start' }\n    | { type: 'end' };\n\nexport type SliderProps = {\n    photos: string[]\n}\n\nexport interface SliderBulletProps {\n    onClick: object;\n    isPicked: boolean;\n}\n\nexport interface SliderImageProps {\n    src: any;\n    animate?: number;\n    direction?: SlideDirection;\n}\n\nexport interface SliderButtonProps {\n    onClick: object;\n}\n","type TechStackType = {\n    [key: string]: string;\n}\nexport const techStackIcons:TechStackType = {\n    \"nodejs\": \"./assets/icons/nodejs-icon.svg\",\n    \"c#\": \"./assets/icons/c-sharp.svg\",\n    \"cloudinary\": \"./assets/icons/cloudinary.svg\",\n    \"django\": \"./assets/icons/django-icon.svg\",\n    \"java\": \"./assets/icons/java.svg\",\n    \"javascript\": \"./assets/icons/javascript.svg\",\n    \"mongodb\": \"./assets/icons/mongodb.svg\",\n    \"postgresql\": \"./assets/icons/postgresql.svg\",\n    \"python\": \"./assets/icons/python.svg\",\n    \"rabbitmq\": \"./assets/icons/rabbitmq-icon.svg\",\n    \"react\": \"./assets/icons/react.svg\",\n    \"spring\": \"./assets/icons/spring-icon.svg\",\n    \"swift\": \"./assets/icons/swift.svg\",\n    \"typescript\": \"./assets/icons/typescript-icon.svg\",\n    \"vue\": \"./assets/icons/vue.svg\",\n}\n","import { SliderActions, SliderState } from \"./types\"\n\nexport const sliderReducer = (state: SliderState, action: SliderActions) => {\n    switch (action.type) {\n        case 'prepare':\n            return {\n                ...state,\n                offsetImage: action.data.offsetImage,\n                slideDirection: action.data.slideDirection,\n                slidePosition: action.data.slidePosition,\n                isPrepared: true,\n            }\n        case 'start':\n            return {\n                ...state,\n                playAnimation: true\n            }\n        case 'end':\n            return {\n                ...state,\n                playAnimation: false,\n                isPrepared: false,\n                currentImage: state.offsetImage,\n            }\n    }\n}","import React from \"react\";\nimport { SlideDirection } from \"../Slider/types\";\ninterface ImageProps extends React.ImgHTMLAttributes<HTMLImageElement> { \n    direction?: SlideDirection;\n    animate?: number;\n}\nconst Image =  ({ ...props }: ImageProps) => {\n    return <img alt={props.alt ?? \"\"} {...props} />\n}\n\nexport default Image;","import styled, { keyframes, css } from \"styled-components\";\nimport { SlideDirection, SliderBulletProps } from \"./types\";\nimport Image from '../Image'\n\nconst animationDuration = 1.5\nconst animationTiming = 'ease'\n\nconst slideInRight = keyframes`\n    from {\n        left: -100%;\n    }\n\n    to {\n        left: 0%;\n    }\n    `;\n\nconst slideInLeft = keyframes`\n    0% {\n        left: 100%;\n    }\n\n    100% {\n        left: 0%;\n    }\n`;\n\nconst slideInRightAnimation = css`\n    left: -100%;\n    animation: ${slideInRight} ${animationDuration}s ${animationTiming};\n`;\n\n\nconst slideInLeftAnimation = css`\n    left: 100%;\n    animation: ${slideInLeft} ${animationDuration}s ${animationTiming};\n`;\n\nconst slideOutLeft = keyframes`\n    0% {\n        left 0%;\n    }    \n\n    100% {\n        left: -100%;\n    }\n`\n\nconst slideOutRight = keyframes`\n    0% {\n        left 0%;\n    }    \n\n    100% {\n        left: 100%;\n    }\n`\nconst slideOutRightAnimation = css`\n    left: -100%;\n    animation: ${slideOutRight} ${animationDuration}s ${animationTiming};\n`;\n\nconst slideOutLeftAnimation = css`\n    left: -100%;\n    animation: ${slideOutLeft} ${animationDuration}s ${animationTiming};\n`;\n\nconst noSlideAnimation = css`\n    left: 100%;\n`;\n\nexport const SliderContainer = styled.div`\n    overflow: hidden;\n    display: block;\n    position: relative;\n    width: 100%;\n    height: 100%;\n    padding: 0;\n   /*  border-top: 1px rgba(0,0,0, .225) solid;\n    border-bottom: 1px rgba(0,0,0, .225) solid; */\n\n    &:before {\n        display: block;\n        content: \"\";\n        padding-top: 58%;\n    }\n`;\n\nexport const SliderImage = styled(Image)`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    left: 0%;\n   \n    ${props => props.animate ? props.direction === SlideDirection.Left ? slideOutLeftAnimation : slideOutRightAnimation : css``}\n\n`;\n\nexport const SliderOffsetImage = styled(Image)`\n    position: absolute;\n    top: 0;\n    left: 100%;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n\n    ${props => props.animate ? props.direction === SlideDirection.Left ? slideInLeftAnimation : slideInRightAnimation : noSlideAnimation}\n`;\n\nexport const SliderBulletContainer = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    margin-top: 10px;\n    \n\n    @media (max-width: 575px) {\n        bottom: 10px;\n    }\n`;\n\nexport const SliderBullet = styled.button<SliderBulletProps>`\n    background-color: #888;\n    padding: 0;\n    display: block;\n    width: 16px;\n    height: 16px;\n    border: none;\n    overflow: hidden;\n    text-indent: -9998px;\n    margin: 4px;\n    border-radius: 50%;\n    cursor: pointer;\n    transform: scale(${props => props.isPicked ? '1.5, 1.5' : '1, 1'});\n    opacity: ${props => !props.isPicked ? 0.2 : 0.85};\n\n    @media (max-width: 575px) {\n        width: 8px;\n        height: 8px;\n    }\n`;\n\nconst ArrowImage = styled.img`\n    width: 50px;\n    height: 50px;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n`\n\n\nexport const LeftArrowImage = styled(ArrowImage)`\n    left: 10px;\n`\n\n\nexport const RightArrowImage = styled(ArrowImage)`\n    right: 10px;\n`\n\nexport const SliderLeftButton = styled.button`\n    position: absolute;\n    padding: 0;\n    display: block;\n    border: none;\n    width: 30%;\n    height: 100%;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    opacity: 0.3;\n    background: rgba(0, 0, 0, 0) linear-gradient(to right, rgba(0, 0, 0, 0.65) 0px, rgba(0, 0, 0, 0) 100%) repeat scroll 0% 0%;\n\n    transition: opacity 0.15s ease-out 0s;\n\n    &:hover {\n        opacity: 0.8;\n    }\n`\n\nexport const SliderRightButton = styled.button`\n    position: absolute;\n    padding: 0;\n    display: block;\n    border: none;\n    width: 30%;\n    height: 100%;\n    cursor: pointer;\n    top: 0;\n    right: 0;\n    opacity: 0.3;\n    background: rgba(0, 0, 0, 0) linear-gradient(to left, rgba(0, 0, 0, 0.65) 0px, rgba(0, 0, 0, 0) 100%) repeat scroll 0% 0%;\n\n    transition: opacity 0.15s ease-out 0s;\n\n    &:hover {\n        opacity: 0.8;\n    }\n`\n\n","import React, { useEffect, useReducer, useRef } from \"react\";\nimport { sliderReducer } from \"./reducer\";\nimport { SliderBullet, SliderBulletContainer, SliderContainer, SliderImage, SliderOffsetImage, LeftArrowImage, RightArrowImage, SliderLeftButton, SliderRightButton } from \"./styled\";\nimport { SlideDirection, SliderProps, SliderState } from \"./types\";\n\nconst Slider = ({ photos }: SliderProps): JSX.Element => {\n\n    const sliderInitialState: SliderState = {\n        playAnimation: false,\n        isPrepared: false,\n        currentImage: photos[0],\n        offsetImage: \"\",\n        slidePosition: 0,\n        slideDirection: SlideDirection.Left\n    }\n\n    const sliderRef = useRef<HTMLDivElement>(null);\n\n    const [{\n        playAnimation,\n        isPrepared,\n        currentImage,\n        offsetImage,\n        slidePosition,\n        slideDirection\n    }, dispatch] = useReducer(sliderReducer, sliderInitialState);\n\n    useEffect(() => {\n        let current = sliderRef.current;\n        const handleAnimationEnd = () => {\n            dispatch({ type: \"end\" })\n        }\n\n        if (current) {\n            current.addEventListener('animationend', handleAnimationEnd);\n            return function cleanup() {\n                current?.removeEventListener('animationend', handleAnimationEnd);\n            }\n        }\n    })\n\n    const handleImageChange = (index: number) => {\n        if (playAnimation || isPrepared) return;\n        const change = slidePosition - index;\n        if (change !== 0) {\n            dispatch({\n                type: \"prepare\", data: {\n                    offsetImage: photos[index],\n                    slidePosition: index,\n                    slideDirection: (change < 0 ? SlideDirection.Right : SlideDirection.Left)\n                }\n            })\n        }\n    }\n\n    const handleImageChangeButtonClick = (direction: SlideDirection) => {\n        if (playAnimation || isPrepared) return;\n\n        let index = slidePosition + (direction === SlideDirection.Left ? -1 : 1);\n        if (index >= photos.length) index = 0;\n        if (index < 0) index = photos.length - 1;\n\n        dispatch({\n            type: \"prepare\", data: {\n                offsetImage: photos[index],\n                slidePosition: index,\n                slideDirection: direction\n            }\n        })\n    }\n\n    return (\n        <>\n            <SliderContainer ref={sliderRef}>\n                <SliderImage animate={playAnimation ? 1 : 0} direction={slideDirection} src={currentImage} />\n                <SliderOffsetImage animate={playAnimation ? 1 : 0} direction={slideDirection}\n                    src={offsetImage} onLoad={() => {\n                        if (isPrepared) {\n                            dispatch({\n                                type: \"start\"\n                            })\n                        }\n                    }} />\n                <SliderLeftButton onClick={() => handleImageChangeButtonClick(SlideDirection.Left)}>\n                    <LeftArrowImage src=\"./assets/left-arrow.svg\" />\n                </SliderLeftButton>\n                <SliderRightButton onClick={() => handleImageChangeButtonClick(SlideDirection.Right)}>\n                    <RightArrowImage src=\"./assets/right-arrow.svg\" />\n                </SliderRightButton>\n            </SliderContainer>\n            <SliderBulletContainer>\n                {\n                    [...photos].map((_, index) => {\n                        return <SliderBullet key={index} isPicked={index === slidePosition}\n                            onClick={() => handleImageChange(index)}>index</SliderBullet>\n                    })\n                }\n            </SliderBulletContainer>\n        </>\n    )\n\n}\n\nexport default Slider;","import styled from \"styled-components\";\nimport TechStackModel from \"../models/tech-stack\";\n\n\nconst Container = styled.div`\n    background-color: #fff;\n    border: 1px solid rgba(0, 0, 0, .125);\n    border-radius: 50%;\n    display: flex;\n    margin: 5px;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n`;\n\nconst Image = styled.img`\n    width: 50px;\n    height: 50px;\n`;\n\nconst TechStack = ({ name, icon }: TechStackModel): JSX.Element => {\n\n    return <Container>\n        <Image src={icon} />\n    </Container>\n}\n\nexport default TechStack;","import styled from \"styled-components\";\n\nexport const ProjectContainer = styled.div`\n    background: #fff;\n    border-radius: .25rem;\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12);\n    margin: 2.5rem auto;\n    position: relative;\n    max-width: 700px;\n    display: grid;\n`;\n\nexport const ProjectBody = styled.div`\n    padding: 1.5rem;\n    text-align: left;\n`;\n\nexport const ProejctHeader = styled.div`\n    padding: 1.5rem;\n    text-align: left;\n    display: flex;\n    flex-wrap: nowrap;\n    align-items: center;\n`;\n\nexport const ProjectTitle = styled.div` \n    width: auto;\n    text-align: unset;\n    font-family: \"Roboto\",sans-serif;\n    padding-bottom: .15rem;\n   \n    & > h2 { \n        margin: 0;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n\n    @media (max-width: 576px) {\n        width: 100%;\n        text-align: center;\n    }\n`;\n\nexport const ProjectRepoLink = styled.a`\n`;\n\nexport const ProjectGithubLogo = styled.img`\n    cursor: pointer;\n    width: 50px;\n    height: 50px;\n`;\n\nexport const ProjectDescriptionContainer = styled.div`\n    position: relative;\n    width: 100%;\n    margin-top: 15px;\n    margin-bottom: 15px;\n    font-size: .9rem;\n    font-weight: 400;\n    color: #747373;\n    font-family: \"Roboto\",sans-serif;\n`;\n\nexport const ProjectTechStacksContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nexport const ProjectWebsiteLink = styled.a`\n    color: #6d56c1;\n    transition: all .3s;\n    position: relative;\n    text-decoration: none;\n    cursor: pointer;      \n\n    &:hover {\n    color: #6d56c1;\n    text-decoration: underline;\n    }\n`;","import React from \"react\";\nimport { techStackIcons } from \"../../data/icons\";\nimport Slider from \"../Slider\";\nimport TechStack from \"../TechStack\";\nimport { ProejctHeader, ProjectBody, ProjectContainer, ProjectDescriptionContainer, ProjectGithubLogo, ProjectRepoLink, ProjectTechStacksContainer, ProjectTitle, ProjectWebsiteLink } from \"./styled\";\nimport { ProjectProps } from \"./types\";\n\n\nconst Project = ({\n    title,\n    photos,\n    video,\n    desc,\n    repositoryURL,\n    frontendURL,\n    backendURL,\n    techStack\n}: ProjectProps): JSX.Element => {\n    return <ProjectContainer>\n        <ProejctHeader>\n            <div>\n                <ProjectRepoLink href={repositoryURL}>\n                    <ProjectGithubLogo src=\"./assets/github-icon.svg\" />\n                </ProjectRepoLink>\n            </div>\n            <div style={{ paddingLeft: '1.5rem' }}>\n\n                <ProjectTitle>\n                    <h2>{title}</h2>\n                </ProjectTitle>\n\n                {frontendURL && <ProjectWebsiteLink href={frontendURL}>Live demo</ProjectWebsiteLink>}\n                {backendURL && <ProjectWebsiteLink style={{ marginLeft: '5px' }} href={backendURL}>API</ProjectWebsiteLink>}\n            </div>\n\n        </ProejctHeader>\n        <Slider photos={photos} />\n        <ProjectBody>\n\n            <ProjectDescriptionContainer>\n                <span>{desc.short}</span>\n            </ProjectDescriptionContainer>\n            <ProjectTechStacksContainer>\n                {\n                    techStack.map((s, index) => {\n                        return <TechStack key={`stack-${index}`} name={s} icon={techStackIcons[s]} />\n                    })\n                }\n            </ProjectTechStacksContainer>\n        </ProjectBody>\n    </ProjectContainer>;\n};\n\nexport default Project;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Project from \"./components/Project\";\nimport data from \"./data/projects.json\";\n\nconst Container = styled.div`\n    text-align: justify;\n    max-width: 950px;\n    padding: .25rem 2.5rem;\n    margin: auto auto;\n`;\n\nconst Header = styled.div`\n    padding: .5rem .5rem;\n    display: grid;\n    font-size: calc(10px + 2vmin);\n    color: black;\n\n    & > span {\n      font-size: 16px;\n    }\n`;\n\nconst Projects = styled.section`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nconst App = (): JSX.Element => {\n\n  return (\n    <Container>\n      <Header>\n        <h1>Hi,</h1>\n        <span>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus\n          quis mauris sodales libero mattis lobortis. Praesent nisi erat,\n          aliquet in bibendum a, lobortis a urna. Suspendisse potenti. Nunc\n          dignissim consectetur varius. Proin suscipit massa ipsum, nec\n          consequat leo posuere sit amet. Morbi pellentesque sem et tortor\n          consequat, pellentesque lacinia justo accumsan. Nunc suscipit lacus ut\n          risus venenatis egestas.\n        </span>\n      </Header>\n\n      <Projects>\n        {data.projects.map(project => {\n          return <Project \n            key={`project-${project.title}`}\n            title={project.title}\n            photos={project.photos}\n            desc={project.desc}\n            techStack={project.techStack}\n            frontendURL={project.frontendURL}\n            backendURL={project.backendURL}\n            repositoryURL={project.repositoryURL} />\n        })}\n\n      </Projects>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}